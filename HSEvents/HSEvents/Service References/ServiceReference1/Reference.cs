//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace HSEvents.ServiceReference1 {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Users", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceWebRole1")]
    public partial class Users : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string dayField;
        
        private int eventIDField;
        
        private string eventNameField;
        
        private string monthField;
        
        private string userIDField;
        
        private string yearField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string day {
            get {
                return this.dayField;
            }
            set {
                if ((object.ReferenceEquals(this.dayField, value) != true)) {
                    this.dayField = value;
                    this.RaisePropertyChanged("day");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int eventID {
            get {
                return this.eventIDField;
            }
            set {
                if ((this.eventIDField.Equals(value) != true)) {
                    this.eventIDField = value;
                    this.RaisePropertyChanged("eventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string eventName {
            get {
                return this.eventNameField;
            }
            set {
                if ((object.ReferenceEquals(this.eventNameField, value) != true)) {
                    this.eventNameField = value;
                    this.RaisePropertyChanged("eventName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string month {
            get {
                return this.monthField;
            }
            set {
                if ((object.ReferenceEquals(this.monthField, value) != true)) {
                    this.monthField = value;
                    this.RaisePropertyChanged("month");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userID {
            get {
                return this.userIDField;
            }
            set {
                if ((object.ReferenceEquals(this.userIDField, value) != true)) {
                    this.userIDField = value;
                    this.RaisePropertyChanged("userID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string year {
            get {
                return this.yearField;
            }
            set {
                if ((object.ReferenceEquals(this.yearField, value) != true)) {
                    this.yearField = value;
                    this.RaisePropertyChanged("year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/addProfile", ReplyAction="http://tempuri.org/IService1/addProfileResponse")]
        System.IAsyncResult BeginaddProfile(string userID, string day, string month, string year, string eventName, System.AsyncCallback callback, object asyncState);
        
        bool EndaddProfile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/viewProfilesJSON", ReplyAction="http://tempuri.org/IService1/viewProfilesJSONResponse")]
        System.IAsyncResult BeginviewProfilesJSON(string userID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<HSEvents.ServiceReference1.Users> EndviewProfilesJSON(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : HSEvents.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class addProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public addProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class viewProfilesJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public viewProfilesJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<HSEvents.ServiceReference1.Users> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<HSEvents.ServiceReference1.Users>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<HSEvents.ServiceReference1.IService1>, HSEvents.ServiceReference1.IService1 {
        
        private BeginOperationDelegate onBeginaddProfileDelegate;
        
        private EndOperationDelegate onEndaddProfileDelegate;
        
        private System.Threading.SendOrPostCallback onaddProfileCompletedDelegate;
        
        private BeginOperationDelegate onBeginviewProfilesJSONDelegate;
        
        private EndOperationDelegate onEndviewProfilesJSONDelegate;
        
        private System.Threading.SendOrPostCallback onviewProfilesJSONCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<addProfileCompletedEventArgs> addProfileCompleted;
        
        public event System.EventHandler<viewProfilesJSONCompletedEventArgs> viewProfilesJSONCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HSEvents.ServiceReference1.IService1.BeginaddProfile(string userID, string day, string month, string year, string eventName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginaddProfile(userID, day, month, year, eventName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool HSEvents.ServiceReference1.IService1.EndaddProfile(System.IAsyncResult result) {
            return base.Channel.EndaddProfile(result);
        }
        
        private System.IAsyncResult OnBeginaddProfile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userID = ((string)(inValues[0]));
            string day = ((string)(inValues[1]));
            string month = ((string)(inValues[2]));
            string year = ((string)(inValues[3]));
            string eventName = ((string)(inValues[4]));
            return ((HSEvents.ServiceReference1.IService1)(this)).BeginaddProfile(userID, day, month, year, eventName, callback, asyncState);
        }
        
        private object[] OnEndaddProfile(System.IAsyncResult result) {
            bool retVal = ((HSEvents.ServiceReference1.IService1)(this)).EndaddProfile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnaddProfileCompleted(object state) {
            if ((this.addProfileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.addProfileCompleted(this, new addProfileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void addProfileAsync(string userID, string day, string month, string year, string eventName) {
            this.addProfileAsync(userID, day, month, year, eventName, null);
        }
        
        public void addProfileAsync(string userID, string day, string month, string year, string eventName, object userState) {
            if ((this.onBeginaddProfileDelegate == null)) {
                this.onBeginaddProfileDelegate = new BeginOperationDelegate(this.OnBeginaddProfile);
            }
            if ((this.onEndaddProfileDelegate == null)) {
                this.onEndaddProfileDelegate = new EndOperationDelegate(this.OnEndaddProfile);
            }
            if ((this.onaddProfileCompletedDelegate == null)) {
                this.onaddProfileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnaddProfileCompleted);
            }
            base.InvokeAsync(this.onBeginaddProfileDelegate, new object[] {
                        userID,
                        day,
                        month,
                        year,
                        eventName}, this.onEndaddProfileDelegate, this.onaddProfileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HSEvents.ServiceReference1.IService1.BeginviewProfilesJSON(string userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginviewProfilesJSON(userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<HSEvents.ServiceReference1.Users> HSEvents.ServiceReference1.IService1.EndviewProfilesJSON(System.IAsyncResult result) {
            return base.Channel.EndviewProfilesJSON(result);
        }
        
        private System.IAsyncResult OnBeginviewProfilesJSON(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userID = ((string)(inValues[0]));
            return ((HSEvents.ServiceReference1.IService1)(this)).BeginviewProfilesJSON(userID, callback, asyncState);
        }
        
        private object[] OnEndviewProfilesJSON(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<HSEvents.ServiceReference1.Users> retVal = ((HSEvents.ServiceReference1.IService1)(this)).EndviewProfilesJSON(result);
            return new object[] {
                    retVal};
        }
        
        private void OnviewProfilesJSONCompleted(object state) {
            if ((this.viewProfilesJSONCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.viewProfilesJSONCompleted(this, new viewProfilesJSONCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void viewProfilesJSONAsync(string userID) {
            this.viewProfilesJSONAsync(userID, null);
        }
        
        public void viewProfilesJSONAsync(string userID, object userState) {
            if ((this.onBeginviewProfilesJSONDelegate == null)) {
                this.onBeginviewProfilesJSONDelegate = new BeginOperationDelegate(this.OnBeginviewProfilesJSON);
            }
            if ((this.onEndviewProfilesJSONDelegate == null)) {
                this.onEndviewProfilesJSONDelegate = new EndOperationDelegate(this.OnEndviewProfilesJSON);
            }
            if ((this.onviewProfilesJSONCompletedDelegate == null)) {
                this.onviewProfilesJSONCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnviewProfilesJSONCompleted);
            }
            base.InvokeAsync(this.onBeginviewProfilesJSONDelegate, new object[] {
                        userID}, this.onEndviewProfilesJSONDelegate, this.onviewProfilesJSONCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override HSEvents.ServiceReference1.IService1 CreateChannel() {
            return new Service1ClientChannel(this);
        }
        
        private class Service1ClientChannel : ChannelBase<HSEvents.ServiceReference1.IService1>, HSEvents.ServiceReference1.IService1 {
            
            public Service1ClientChannel(System.ServiceModel.ClientBase<HSEvents.ServiceReference1.IService1> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginaddProfile(string userID, string day, string month, string year, string eventName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = userID;
                _args[1] = day;
                _args[2] = month;
                _args[3] = year;
                _args[4] = eventName;
                System.IAsyncResult _result = base.BeginInvoke("addProfile", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndaddProfile(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("addProfile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginviewProfilesJSON(string userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userID;
                System.IAsyncResult _result = base.BeginInvoke("viewProfilesJSON", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<HSEvents.ServiceReference1.Users> EndviewProfilesJSON(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<HSEvents.ServiceReference1.Users> _result = ((System.Collections.ObjectModel.ObservableCollection<HSEvents.ServiceReference1.Users>)(base.EndInvoke("viewProfilesJSON", _args, result)));
                return _result;
            }
        }
    }
}
